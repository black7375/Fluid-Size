// @import 'utils';

// ** Break Points *************************************************************
$phone-width:  480px !default;
$phone-height: 854px !default;

$tablet-width:   768px !default;
$tablet-height: 1024px !default;

$laptop-width:  1280px !default;
$laptop-height:  720px !default;

$desktop-width:  1920px !default;
$desktop-height: 1080px !default;

$high-desktop-width:  2560px !default;
$high-desktop-height: 1440px !default;

$breakpoints: (        // px
  phone:        $phone-width,
  tablet:       $tablet-width,
  laptop:       $laptop-width,
  desktop:      $desktop-width,
  high-desktop: $high-desktop-width
) !default;

$breakpoints-height: ( // px
  phone:        $phone-height,
  tablet:       $tablet-height,
  laptop:       $laptop-height,
  desktop:      $desktop-height,
  high-desktop: $high-desktop-height
) !default;

$screen-sizes: (       // inch
  phone:        5,
  tablet:       10.2,
  laptop:       14,
  desktop:      24,
  high-desktop: 27
) !default;

$screen-distances: (   // 10cm
  phone:        3,
  tablet:       4,
  laptop:       5,
  desktop:      6,
  high-desktop: 6
) !default;

// Alias
$phone:        $phone-width        !default;
$tablet:       $tablet-width       !default;
$laptop:       $laptop-width       !default;
$desktop:      $desktop-width      !default;
$high-desktop: $high-desktop-width !default;

// == Validation ===============================================================
$CACHED-BREAKPOINTS:        $breakpoints        !default;
$CACHED-BREAKPOINTS-HEIGHT: $breakpoints-height !default;
$CACHED-SCREEN-SIZES:       $screen-sizes       !default;
$CACHED-SCREEN-DISTANCES:   $screen-distances   !default;

@function check-breakpoints($criteria-name, $others-name, $criteria-keys, $others-keys) {
  $validate-breakpoints: true;

  $criteria-length: length($criteria-keys);
  $others-length:   length($others-keys);
  @each $i in range($others-length) {
    $other-name:   nth($others-name, $i);
    $other-keys:   nth($others-keys, $i);
    $other-length: length($other-keys);

    $validate-breakpoints: $validate-breakpoints and $criteria-length == $other-length;
    @if not $validate-breakpoints {
      @error "#{$criteria-name}'s length doesn't same #{$other-name}'s length";
    }

    $validate-breakpoints: $validate-breakpoints and $criteria-keys == $other-keys;
    @if not $validate-breakpoints {
      @error "#{$criteria-name}'s keys doesn't same #{$other-name}'s keys";
    }
  }
  @return $validate-breakpoints;
}

// -- Interface --
@function validate-breakpoints() {
  $validate-breakpoints: true;

  @if not ($CACHED-BREAKPOINTS  == $breakpoints  and $CACHED-BREAKPOINTS-HEIGHT == $breakpoints-height and
           $CACHED-SCREEN-SIZES == $screen-sizes and $CACHED-SCREEN-DISTANCES   == $screen-distances) {
    $break-keys: map($breakpoints $breakpoints-height $screen-sizes $screen-distances,
                     map-keys list-sort);
    $breakpoints-keys:        nth($break-keys, 1);
    $breakpoints-height-keys: nth($break-keys, 2);
    $screen-sizes-keys:       nth($break-keys, 3);
    $screen-distances-keys:   nth($break-keys, 4);

    $others-name: "$breakpoints-height"    "$screen-sizes"    "$screen-distances";
    $others-keys: $breakpoints-height-keys $screen-sizes-keys $screen-distances-keys;
    $validate-breakpoints: check-breakpoints("$breakpoints", $others-name, $breakpoints-keys, $others-keys);

    $CACHED-BREAKPOINTS:        $breakpoints        !global;
    $CACHED-BREAKPOINTS-HEIGHT: $breakpoints-height !global;
    $CACHED-SCREEN-SIZES:       $screen-sizes       !global;
    $CACHED-SCREEN-DISTANCES:   $screen-distances   !global;
  }

  @return $validate-breakpoints;
}
